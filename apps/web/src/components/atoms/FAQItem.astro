---
interface Props {
	question: string;
	answer: string;
}

const { question, answer } = Astro.props;
---

<details class="faq-item">
	<summary>{question}</summary>
	<p>{answer}</p>
</details>

<style>
	.faq-item {
		background: var(--top-color);
		border: 1px solid var(--border-color);
		border-radius: var(--border-radius);
		margin-bottom: var(--spacing-md);
		transition: all var(--transition-duration) ease;
		overflow: hidden;
	}

	.faq-item:hover {
		box-shadow: 0 8px 25px var(--shadow-color);
		transform: translateY(-2px);
	}

	.faq-item[open] {
		border-color: var(--primary);
		box-shadow: 0 8px 25px var(--shadow-color);
	}

	summary {
		padding: var(--spacing-lg);
		cursor: pointer;
		font-weight: 600;
		color: var(--text-color);
		font-size: 1.1rem;
		transition: all var(--transition-duration) ease;
		position: relative;
		list-style: none;
	}

	summary::-webkit-details-marker {
		display: none;
	}

	summary::after {
		content: "+";
		position: absolute;
		right: var(--spacing-lg);
		top: 50%;
		transform: translateY(-50%);
		font-size: 1.5rem;
		font-weight: 300;
		color: var(--primary);
		transition: transform var(--transition-duration) ease;
	}

	.faq-item[open] summary::after {
		transform: translateY(-50%) rotate(45deg);
	}

	summary:hover {
		background: var(--neutral-light);
		color: var(--primary);
	}

	.faq-item p {
		padding: 0 var(--spacing-lg) var(--spacing-lg);
		color: var(--text-muted);
		line-height: 1.6;
		margin: 0;
		animation: fadeIn var(--transition-duration) ease;
	}

	@keyframes fadeIn {
		from {
			opacity: 0;
			transform: translateY(-10px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
</style>
