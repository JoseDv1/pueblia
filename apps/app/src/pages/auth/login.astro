---
import Layout from "@/layouts/Layout.astro";
import Button from "@/components/atoms/Button.astro";
import Google from "@/assets/icons/google.svg";
import EyeIcon from "@/assets/icons/eye.svg";
import EyeClosedIcon from "@/assets/icons/eye-closed.svg";
---

<Layout title="Login">
	<main transition:name="main">
		<img src="/favicon.svg" alt="Logo" transition:name="logo" />

		<h1 transition:name="title">Iniciar Sesión</h1>

		<form
			transition:name="form"
			x-data="loginForm"
			@submit.prevent="handleLogin"
		>
			<label transition:name="email-label">
				<span>Email: </span>
				<input
					type="email"
					placeholder="example@example.com"
					required
					name="email"
					transition:name="email-input"
					autocomplete="email"
				/>
			</label>

			<label transition:name="password-label">
				<span>Contraseña:</span>
				<div transition:name="password-container">
					<input
						:placeholder="showPassword ? 'Contraseña...' : '********'"
						x-bind:type="showPassword ? 'text' : 'password'"
						required
						name="password"
						transition:name="password-input"
						autocomplete="current-password"
					/>
					<span class="eye" transition:name="password-eye">
						<EyeIcon
							width={24}
							height={24}
							@click="showPassword = !showPassword"
						/>
					</span>
				</div>
			</label>
			<Button variant="primary" transition:name="primary-button" type="submit"
				>Iniciar Sesion</Button
			>
		</form>

		<hr transition:name="divider" />

		<Button variant="secondary" transition:name="google-button">
			<Google width={24} height={24} />
			<span> Iniciar Sesion con Google </span>
		</Button>

		<p transition:name="switch-text">
			¿No tienes una cuenta? <a
				href="/auth/register"
				transition:name="switch-link">Regístrate</a
			>
		</p>
	</main>
</Layout>

<script>
	import Alpine from "alpinejs";
	import { API_URL } from "@/services/constants";
	import { navigate } from "astro:transitions/client";

	document.addEventListener("alpine:init", () => {
		Alpine.data("loginForm", () => ({
			showPassword: false,
			async handleLogin(e: SubmitEvent) {
				e.preventDefault();
				const form = e.target as HTMLFormElement;
				const formData = new FormData(form);

				// Pass formData to JSON
				const data = Object.fromEntries(formData.entries()) as {
					email: string;
					password: string;
				};

				await login(data.email, data.password);
				navigate("/");
			},
		}));
	});

	async function login(username: string, password: string) {
		const res = await fetch(`${API_URL}/api/v1/auth/login`, {
			method: "POST",
			credentials: "include", // Include cookies for session management
			headers: {
				"Content-Type": "application/json",
			},
			body: JSON.stringify({ email: username, password }),
		});

		const data = await res.json();
		if (!res.ok) {
			throw new Error(data.message || "Error al iniciar sesión");
		}

		console.log("Login successful", data);
		return data;
	}
</script>

<style>
	body {
		min-height: 100dvh;
		display: grid;
		place-items: center;
		background: radial-gradient(
			circle at center,
			var(--background-color),
			var(--middle-color)
		);
	}

	main h1 {
		text-align: center;
	}

	main {
		display: flex;
		flex-direction: column;
		gap: var(--spacing-lg);
		padding: 2rem 4rem;
		border-radius: 0.5rem;
		width: clamp(300px, 90%, 500px);
		background-color: var(--middle-color);
	}

	main img {
		width: 100px;
		height: 100px;
		margin: 0 auto;
	}

	form {
		display: flex;
		flex-direction: column;
		gap: var(--spacing-md);
	}

	label {
		display: flex;
		flex-direction: column;
	}

	label > span {
		margin-bottom: 0.25rem;
		font-weight: bold;
	}

	input {
		padding: 0.5rem 0.75rem;
		border-radius: 0.75rem;
		border: none;

		outline: 1px solid var(--border-color);
		background-color: var(--background-color);
		transition: border-color 0.2s ease-in-out;
		width: 100%;

		&:focus {
			border-color: var(--primary);
			outline: none;
		}

		&::placeholder {
			color: var(--text-muted);
		}
	}

	button {
		justify-content: center;
	}

	main > p {
		text-align: center;
	}

	a {
		color: var(--primary-dark);
	}

	.eye {
		position: absolute;
		right: 0.75rem;
	}

	label div {
		position: relative;
		display: flex;
		align-items: center;
	}
</style>
